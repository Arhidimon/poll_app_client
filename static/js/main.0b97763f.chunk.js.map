{"version":3,"sources":["common/helpers/ComponentWithRouter.tsx","common/AuthContext.tsx","Polls/Poll.tsx","Polls/Polls.tsx","common/components/AuthDialog.tsx","common/components/AppBarWithSearchAndDrawer.tsx","PageNotFound/PageNotFound.tsx","Polls/NewPoll.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx"],"names":["withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","AuthContext","React","createContext","user","signin","signout","ChartJS","register","ArcElement","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Poll","id","hasIncorrectId","vote","optionIndex","a","console","log","context","JSON","stringify","headers","localStorage","getItem","token","parse","access_token","Authorization","fetch","method","body","option","response","ok","json","setState","isLoaded","poll","error","status","changeOption","event","parseInt","target","value","previousState","selected","state","tabIndex","this","data","chartData","labels","datasets","label","borderWidth","backgroundColor","borderColor","i","options","length","colorString","Math","floor","random","push","name","numberOfVotes","to","className","Paper","elevation","Breadcrumbs","Link","underline","color","component","RouterLink","Typography","Divider","variant","FormControl","FormLabel","Box","sx","bgcolor","left","RadioGroup","undefined","toString","onChange","Object","values","map","currentValue","index","FormControlLabel","control","Radio","Tabs","newTabIndex","centered","Tab","convertDataToDoughnutChart","convertDataToBarChart","CircularProgress","contextType","Polls","onCopyUrlClick","navigator","clipboard","writeText","window","enqueueSnackbar","dataGridColumns","field","headerName","sortable","renderCell","Button","style","minWidth","textDecoration","onClick","flex","width","hide","polls","startIcon","loading","rows","columns","autoHeight","disableSelectionOnClick","onCellClick","withSnackbar","DialogMode","AuthDialog","fields","validate","email","isValid","test","password","login","onSignInClick","username","setItem","alert","onClose","onTermsDecline","mode","SignUp","isTermsAccepted","onTermsAccept","onSignUpSubmit","SignIn","showLoginError","showPasswordError","Dialog","open","DialogTitle","DialogContent","DialogContentText","TextField","helperText","autoFocus","margin","type","fullWidth","onBlur","DialogActions","showEmailError","Checkbox","checked","textTransform","Terms","scroll","dividers","drawerWidth","Main","styled","shouldForwardProp","prop","theme","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","Search","position","borderRadius","shape","alpha","palette","common","white","marginRight","breakpoints","up","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","AppBar","MuiAppBar","DrawerHeader","mixins","toolbar","AppBarWithSearchAndDrawer","handleDrawerOpen","isDrawerOpen","handleDrawerClose","handleProfileMenuOpen","anchorEl","currentTarget","handleMobileMenuClose","mobileMoreAnchorEl","handleMenuClose","handleMobileMenuOpen","handleSignOut","handleSignIn","authDialog","handleSignUp","handleAuthDialogClose","isAuthDialogOpen","isMenuOpen","Boolean","isMobileMenuOpen","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","CssBaseline","Toolbar","edge","mr","noWrap","xs","sm","placeholder","inputProps","md","disableElevation","Drawer","flexShrink","boxSizing","anchor","direction","List","ListItem","button","ListItemIcon","ListItemText","primary","text","withTheme","PageNotFound","t","background","default","flexDirection","NewPoll","addOption","removeOption","splice","Home","About","Copyright","align","Date","getFullYear","App","clear","userCredentials","Provider","Container","maxWidth","minHeight","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0b97763f.chunk.js","sourcesContent":["import {\n  NavigateFunction,\n  Params,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\n//TODO fix any\nexport interface IRouter {\n  location: Location;\n  navigate: NavigateFunction;\n  params: Readonly<Params<string>>;\n}\n\nfunction withRouter(Component: React.ElementType) {\n  function ComponentWithRouterProp(props: any) {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default withRouter;\n","import React from 'react';\nimport IUser from './interfaces/IUser';\nexport interface IAuthContext {\n  user: null | IUser;\n  signin: (login: string) => void;\n  signout: () => void;\n}\n\nexport const AuthContext = React.createContext<IAuthContext>({\n  user: null,\n  signin: () => null,\n  signout: () => null,\n});\n","import React from 'react';\nimport { Navigate, Link as RouterLink } from 'react-router-dom';\nimport withRouter, { IRouter } from '../common/helpers/ComponentWithRouter';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartData,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n} from 'chart.js';\nimport {\n  Breadcrumbs,\n  Paper,\n  Typography,\n  Link,\n  Divider,\n  Box,\n  CircularProgress,\n} from '@mui/material';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { AuthContext } from '../common/AuthContext';\n\ninterface IProps {\n  router: IRouter;\n}\n\ninterface IState {\n  isLoaded: boolean;\n  poll?: IPoll;\n  error?: string;\n  tabIndex: number;\n}\n\ninterface IPoll {\n  name: string;\n  options: {\n    name: string;\n    numberOfVotes: number;\n  }[];\n  selected?: number | null;\n}\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n);\n\nclass Poll extends React.Component<IProps, IState> {\n  id = '';\n  hasIncorrectId = false;\n  static contextType = AuthContext;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = { tabIndex: 0, isLoaded: false };\n\n    console.log('props');\n    console.log(props);\n    if (props.router.params.id) {\n      this.id = props.router.params.id;\n    } else {\n      this.hasIncorrectId = true;\n    }\n  }\n\n  vote = async (optionIndex: number) => {\n    console.log('vote');\n    console.log(`context ${this.context} ${JSON.stringify(this.context)}`);\n    const headers: HeadersInit = {\n      'Content-Type': 'application/json',\n    };\n    const user = localStorage.getItem('user');\n    if (this.context.user && user) {\n      const token = JSON.parse(user).access_token;\n      headers.Authorization = `Bearer ${token}`;\n    } else {\n      return;\n    }\n    const response = await fetch(\n      `http://localhost:3000/api/polls/${this.id}/vote`,\n      {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          option: optionIndex,\n        }),\n      },\n    );\n    if (response.ok) {\n      const json = await response.json();\n      this.setState({\n        isLoaded: true,\n        poll: json,\n      });\n    } else {\n      this.setState({\n        isLoaded: true,\n        error: `HTTP error: ${response.status}`,\n      });\n    }\n  };\n\n  async componentDidMount() {\n    const headers: HeadersInit = {};\n    const user = localStorage.getItem('user');\n    console.log(`context.user ${this.context.user} user ${user}`);\n    if (this.context.user && user) {\n      const token = JSON.parse(user).access_token;\n      headers.Authorization = `Bearer ${token}`;\n    }\n    console.log(`headers ${JSON.stringify(headers)}`);\n    const response = await fetch(`http://localhost:3000/api/polls/${this.id}`, {\n      method: 'GET',\n      headers,\n    });\n    if (response.ok) {\n      const json = await response.json();\n      this.setState({\n        isLoaded: true,\n        poll: json,\n      });\n    } else {\n      this.setState({\n        isLoaded: true,\n        error: `HTTP error: ${response.status}`,\n      });\n    }\n  }\n\n  convertDataToDoughnutChart(data: IPoll) {\n    const chartData: ChartData<'doughnut', number[], string> = {\n      labels: [],\n      datasets: [\n        {\n          label: '# of Votes',\n          data: [],\n          borderWidth: 2,\n        },\n      ],\n    };\n    const backgroundColor = [];\n    const borderColor = [];\n\n    for (let i = 0; i < data.options.length; i++) {\n      const colorString = `rgba(${Math.floor(\n        Math.random() * 255,\n      )}, ${Math.floor(Math.random() * 255)}, ${Math.floor(\n        Math.random() * 255,\n      )}, `;\n      backgroundColor.push(colorString + '0.2');\n      borderColor.push(colorString + '1');\n    }\n    chartData.datasets[0].backgroundColor = backgroundColor;\n    chartData.datasets[0].borderColor = borderColor;\n\n    for (const option of data.options) {\n      chartData.labels?.push(option.name);\n      chartData.datasets[0].data.push(option.numberOfVotes);\n    }\n\n    return chartData;\n  }\n\n  convertDataToBarChart(data: IPoll) {\n    const chartData: ChartData<'bar', number[], string> = {\n      labels: [],\n      datasets: [\n        {\n          label: '# of Votes',\n          data: [],\n          borderWidth: 2,\n        },\n      ],\n    };\n    const backgroundColor = [];\n    const borderColor = [];\n\n    for (let i = 0; i < data.options.length; i++) {\n      const colorString = `rgba(${Math.floor(\n        Math.random() * 255,\n      )}, ${Math.floor(Math.random() * 255)}, ${Math.floor(\n        Math.random() * 255,\n      )}, `;\n      backgroundColor.push(colorString + '0.2');\n      borderColor.push(colorString + '1');\n    }\n    chartData.datasets[0].backgroundColor = backgroundColor;\n    chartData.datasets[0].borderColor = borderColor;\n\n    for (const option of data.options) {\n      chartData.labels?.push(option.name);\n      chartData.datasets[0].data.push(option.numberOfVotes);\n    }\n\n    return chartData;\n  }\n\n  changeOption = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log('changeOption');\n    if (this.context.user) {\n      this.vote(parseInt(event.target.value));\n      this.setState((previousState) => {\n        if (previousState.poll) {\n          return {\n            poll: {\n              ...previousState.poll,\n              selected: parseInt(event.target.value),\n            },\n          };\n        } else {\n          return {};\n        }\n      });\n    }\n  };\n\n  render() {\n    if (this.hasIncorrectId) {\n      // this.props.router.navigate('/404', { replace: true });\n      return <Navigate to=\"/404\" />;\n    }\n\n    const handleTabChange = (\n      event: React.SyntheticEvent,\n      newTabIndex: number,\n    ) => {\n      this.setState({\n        tabIndex: newTabIndex,\n      });\n    };\n    if (this.state.poll) {\n      console.log(`this.state.poll.selected ${this.state.poll.selected}`);\n    }\n\n    return (\n      <>\n        <main>\n          <div className=\"Poll\">\n            {this.state.isLoaded && this.state.poll ? (\n              <>\n                <h1>{this.state.poll.name}</h1>\n                <Paper elevation={3}>\n                  <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link\n                      underline=\"hover\"\n                      color=\"inherit\"\n                      to=\"/polls\"\n                      component={RouterLink}\n                    >\n                      Polls\n                    </Link>\n                    {/* <Link to=\"/polls\">Polls</Link> */}\n                    <Typography color=\"text.primary\">\n                      {this.state.poll.name}\n                    </Typography>\n                  </Breadcrumbs>\n                  <Divider variant=\"middle\" />\n                  {this.context.user && (\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">\n                        {this.state.poll.name}\n                      </FormLabel>\n                      <Box\n                        sx={{\n                          bgcolor: 'background.paper',\n                          color: 'text.primary',\n                          left: '0',\n                        }}\n                      >\n                        <RadioGroup\n                          aria-label=\"poll\"\n                          name=\"radio-buttons-group\"\n                          value={\n                            this.state.poll.selected === null ||\n                            this.state.poll.selected === undefined\n                              ? undefined\n                              : this.state.poll.selected.toString()\n                          }\n                          onChange={this.changeOption}\n                        >\n                          {Object.values(this.state.poll.options).map(\n                            (currentValue, index) => (\n                              <FormControlLabel\n                                value={index}\n                                control={<Radio />}\n                                label={currentValue.name}\n                              />\n                            ),\n                          )}\n                        </RadioGroup>\n                      </Box>\n                    </FormControl>\n                  )}\n                  <Tabs\n                    value={this.state.tabIndex}\n                    onChange={handleTabChange}\n                    centered\n                  >\n                    <Tab label=\"Doughnut Chart\" />\n                    <Tab label=\"Bar Chart\" />\n                  </Tabs>\n                  {this.state.tabIndex === 0 && (\n                    <Doughnut\n                      data={this.convertDataToDoughnutChart(this.state.poll)}\n                    />\n                  )}\n                  {this.state.tabIndex === 1 && (\n                    <Bar data={this.convertDataToBarChart(this.state.poll)} />\n                  )}\n                </Paper>\n              </>\n            ) : (\n              <CircularProgress />\n            )}\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Poll);\n","/* eslint-disable prettier/prettier */\nimport HowToVoteIcon from '@mui/icons-material/HowToVote';\nimport LinkIcon from '@mui/icons-material/Link';\nimport { Button, Paper } from '@mui/material';\nimport { DataGrid, GridColDef, GridRowId } from '@mui/x-data-grid';\nimport { withSnackbar } from 'notistack';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport withRouter, { IRouter } from '../common/helpers/ComponentWithRouter';\nimport AddIcon from '@mui/icons-material/Add';\nimport { AuthContext } from '../common/AuthContext';\n\n// interface IProps {}\ninterface IState {\n  error?: any;\n  isLoaded: boolean;\n  polls: {\n    name: string;\n    options: string[];\n  }[];\n}\n\nclass Polls extends React.Component<any, IState> {\n  //\n  onCopyUrlClick = (id: GridRowId) => {\n    return () => {\n      navigator.clipboard.writeText(window.location + '/' + id);\n      this.props.enqueueSnackbar('Poll link copied to buffer.', {\n        variant: 'success',\n      });\n    };\n  };\n\n  dataGridColumns: GridColDef[] = [\n    {\n      field: 'action',\n      headerName: 'Action',\n      sortable: false,\n      renderCell: (params) => {\n        console.log();\n        return (\n          <>\n            <Button style={{ minWidth: '0' }}>\n              <Link\n                to={'/polls/' + params.id}\n                style={{ textDecoration: 'none' }}\n              >\n                <HowToVoteIcon />\n              </Link>\n            </Button>\n            <Button\n              onClick={this.onCopyUrlClick(params.id)}\n              style={{ minWidth: '0' }}\n            >\n              <LinkIcon />\n            </Button>\n          </>\n        );\n      },\n    },\n    { field: 'name', headerName: 'Caption', minWidth: 200, flex: 1 },\n    { field: 'votes', headerName: 'Users voted', width: 150 },\n    { field: 'poll_type', headerName: 'Type', width: 100 },\n    { field: 'start', headerName: 'Start date', width: 100, hide: true },\n    { field: 'end', headerName: 'End date', width: 100, hide: true },\n  ];\n\n  router: IRouter;\n\n  constructor(props: { router: IRouter }) {\n    super(props);\n\n    this.router = this.props.router;\n    this.state = {\n      error: null,\n      isLoaded: false,\n      polls: [],\n    };\n  }\n\n  static contextType = AuthContext;\n\n  async componentDidMount() {\n    const response = await fetch('http://localhost:3000/api/polls');\n    if (response.ok) {\n      const json = await response.json();\n      this.setState({\n        isLoaded: true,\n        polls: json,\n      });\n    } else {\n      this.setState({\n        isLoaded: true,\n        error: response.status,\n      });\n    }\n  }\n\n  onCellClick() {\n    console.log('clicked');\n    return;\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"Polls\">\n          <Paper elevation={3}>\n            <h1>Polls:</h1>\n          </Paper>\n          {this.context.user && (\n            <Link to={'/polls/new'} style={{ textDecoration: 'none' }}>\n              <Button variant=\"outlined\" startIcon={<AddIcon />}>\n                New\n              </Button>\n            </Link>\n          )}\n          <Paper elevation={3}>\n            <DataGrid\n              loading={!this.state.isLoaded}\n              rows={this.state.polls}\n              columns={this.dataGridColumns}\n              autoHeight\n              disableSelectionOnClick\n              onCellClick={this.onCellClick}\n            />\n          </Paper>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withSnackbar(withRouter(Polls));\n","import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport React from 'react';\n\nimport { AuthContext } from '../AuthContext';\nimport { Checkbox } from '@mui/material';\n\nexport enum DialogMode {\n  SignIn,\n  SignUp,\n  Terms,\n}\n// interface ILoginDialogProps {};\ninterface ILoginDialogState {\n  mode: DialogMode;\n  email: { value: string; isValid: boolean };\n  login: { value: string; isValid: boolean };\n  password: { value: string; isValid: boolean };\n  isTermsAccepted: boolean;\n}\n\nclass AuthDialog extends React.Component<any, ILoginDialogState> {\n  fields: {\n    email: { value: string; isValid: boolean };\n    login: { value: string; isValid: boolean };\n    password: { value: string; isValid: boolean };\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      mode: props.mode,\n      email: { value: '', isValid: false },\n      login: { value: '', isValid: false },\n      password: { value: '', isValid: false },\n      isTermsAccepted: false,\n    };\n    this.fields = {\n      email: { value: '', isValid: false },\n      login: { value: '', isValid: false },\n      password: { value: '', isValid: false },\n    };\n  }\n\n  // handleClose = () => {\n  //   this.setState({ isOpen: false });\n  // };\n  validate = (field: string, value: string) => {\n    switch (field) {\n      case 'email': {\n        this.fields.email.value = value;\n        this.fields.email.isValid =\n          /^[\\w-]+(?:\\.[\\w-]+)*@(?:[\\w-]+\\.)*\\w[\\w-]{0,66}\\.[a-z]{2,6}(?:\\.[a-z]{2})?$/.test(\n            value,\n          );\n        break;\n      }\n      case 'password': {\n        this.fields.password.value = value;\n        this.fields.password.isValid = value.length > 0;\n        break;\n      }\n      case 'login': {\n        this.fields.login.value = value;\n        this.fields.login.isValid = value.length > 0;\n        break;\n      }\n    }\n    this.setState({ ...this.fields });\n    console.log(this.fields);\n    return;\n  };\n\n  onSignInClick = async () => {\n    const response = await fetch('http://localhost:3000/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: this.state.login.value,\n        password: this.state.password.value,\n      }),\n    });\n    if (response.ok) {\n      const json = await response.json();\n      console.log('SignIn');\n      console.log(json);\n      this.context.signin({ user: { login: this.state.login.value } });\n      localStorage.setItem('username', this.state.login.value);\n      localStorage.setItem('user', JSON.stringify(json));\n    } else {\n      alert('SignIn error: ' + response.status);\n    }\n    this.props.onClose();\n  };\n\n  onTermsDecline = () => {\n    this.setState({ mode: DialogMode.SignUp, isTermsAccepted: false });\n  };\n\n  onTermsAccept = () => {\n    this.setState({ mode: DialogMode.SignUp, isTermsAccepted: true });\n  };\n\n  onSignUpSubmit = async () => {\n    const response = await fetch('http://localhost:3000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: this.state.login.value,\n        password: this.state.password.value,\n        email: this.state.email.value,\n      }),\n    });\n    if (response.ok) {\n      const json = await response.json();\n      console.log('SignUp');\n      console.log(json);\n    } else {\n      alert('SignUp error: ' + response.status);\n    }\n    this.props.onClose();\n  };\n\n  render() {\n    switch (this.state.mode) {\n      case DialogMode.SignIn: {\n        const showLoginError =\n          this.state.login.value !== '' && !this.state.login.isValid;\n        const showPasswordError =\n          this.state.password.value !== '' && !this.state.password.isValid;\n        return (\n          <div>\n            <Dialog\n              // open={this.props.mode !== null}\n              open\n              onClose={this.props.onClose}\n            >\n              <DialogTitle>Sign In</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  By continuing, you agree to our User Agreement and Privacy\n                  Policy.\n                </DialogContentText>\n                <TextField\n                  error={showLoginError}\n                  helperText={showLoginError ? 'Invalid login!' : ''}\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"login\"\n                  label=\"Login\"\n                  type=\"login\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onBlur={(event) => {\n                    this.validate('login', event.target.value);\n                  }}\n                />\n                <TextField\n                  error={showPasswordError}\n                  helperText={showPasswordError ? 'Invalid password!' : ''}\n                  margin=\"dense\"\n                  id=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onBlur={(event) => {\n                    this.validate('password', event.target.value);\n                  }}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.props.onClose}>Cancel</Button>\n                <Button onClick={this.onSignInClick}>Sign in</Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n      }\n      case DialogMode.SignUp: {\n        const showEmailError =\n          this.state.email.value !== '' && !this.state.email.isValid;\n        const showPasswordError =\n          this.state.password.value !== '' && !this.state.password.isValid;\n        const showLoginError =\n          this.state.login.value !== '' && !this.state.login.isValid;\n        return (\n          <div>\n            <Dialog open onClose={this.props.onClose}>\n              <DialogTitle>Sign Up</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  By continuing, you are setting up a PollApp account and agree\n                  to our User Agreement and Privacy Policy.\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  error={showEmailError}\n                  helperText={showEmailError ? 'Invalid email!' : ''}\n                  margin=\"dense\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onBlur={(event) => {\n                    this.validate('email', event.target.value);\n                  }}\n                />\n                <TextField\n                  error={showLoginError}\n                  helperText={showLoginError ? 'Invalid login!' : ''}\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"login\"\n                  label=\"Login\"\n                  type=\"login\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onBlur={(event) => {\n                    this.validate('login', event.target.value);\n                  }}\n                />\n                <TextField\n                  margin=\"dense\"\n                  error={showPasswordError}\n                  helperText={showPasswordError ? 'Invalid password!' : ''}\n                  id=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                  variant=\"outlined\"\n                  onBlur={(event) => {\n                    this.validate('password', event.target.value);\n                  }}\n                />\n                <Checkbox\n                  checked={this.state.isTermsAccepted}\n                  onChange={(event) =>\n                    this.setState({ isTermsAccepted: event.target.checked })\n                  }\n                />{' '}\n                <span>I read and accepted</span>\n                <Button\n                  style={{ textTransform: 'none' }}\n                  onClick={() => this.setState({ mode: DialogMode.Terms })}\n                >\n                  user agreement\n                </Button>\n                .\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.props.onClose}>Cancel</Button>\n                <Button onClick={this.onSignUpSubmit}>Sign Up</Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n      }\n      case DialogMode.Terms: {\n        return (\n          <div>\n            <Dialog\n              open\n              onClose={this.props.onClose}\n              scroll=\"paper\"\n              aria-labelledby=\"scroll-dialog-title\"\n              aria-describedby=\"scroll-dialog-description\"\n            >\n              <DialogTitle id=\"scroll-dialog-title\">Terms of Use</DialogTitle>\n              <DialogContent dividers>\n                <DialogContentText\n                  id=\"scroll-dialog-description\"\n                  // ref={descriptionElementRef}\n                  tabIndex={-1}\n                >\n                  `Generic Terms of Use Please read these terms of use carefully\n                  before using service operated by PollsApp. Conditions of use\n                  By using this website, you certify that you have read and\n                  reviewed this Agreement and that you agree to comply with its\n                  terms. If you do not want to be bound by the terms of this\n                  Agreement, you are advised to leave the website accordingly.\n                  PollsApp only grants use and access of this website, its\n                  products, and its services to those who have accepted its\n                  terms. Privacy policy Before you continue using our website,\n                  we advise you to read our privacy policy [link to privacy\n                  policy] regarding our user data collection. It will help you\n                  better understand our practices. Age restriction You must be\n                  at least 18 (eighteen) years of age before you can use this\n                  website. By using this website, you warrant that you are at\n                  least 18 years of age and you may legally adhere to this\n                  Agreement. PollsApp assumes no responsibility for liabilities\n                  related to age misrepresentation. Intellectual property You\n                  agree that all materials, products, and services provided on\n                  this website are the property of PollsApp, its affiliates,\n                  directors, officers, employees, agents, suppliers, or\n                  licensors including all copyrights, trade secrets, trademarks,\n                  patents, and other intellectual property. You also agree that\n                  you will not reproduce or redistribute the PollsApp’s\n                  intellectual property in any way, including electronic,\n                  digital, or new trademark registrations. You grant PollsApp a\n                  royalty-free and non-exclusive license to display, use, copy,\n                  transmit, and broadcast the content you upload and publish.\n                  For issues regarding intellectual property claims, you should\n                  contact the company in order to come to an agreement. User\n                  accounts As a user of this website, you may be asked to\n                  register with us and provide private information. You are\n                  responsible for ensuring the accuracy of this information, and\n                  you are responsible for maintaining the safety and security of\n                  your identifying information. You are also responsible for all\n                  activities that occur under your account or password. If you\n                  think there are any possible issues regarding the security of\n                  your account on the website, inform us immediately so we may\n                  address it accordingly. We reserve all rights to terminate\n                  accounts, edit or remove content and cancel orders in their\n                  sole discretion. Terms of use template by WebsitePolicies.com\n                  Applicable law By visiting this website, you agree that the\n                  laws of the [location], without regard to principles of\n                  conflict laws, will govern these terms and conditions, or any\n                  dispute of any sort that might come between PollsApp and you,\n                  or its business partners and associates. Disputes Any dispute\n                  related in any way to your visit to this website or to\n                  products you purchase from us shall be arbitrated by state or\n                  federal court [location] and you consent to exclusive\n                  jurisdiction and venue of such courts. Indemnification You\n                  agree to indemnify PollsApp and its affiliates and hold\n                  PollsApp harmless against legal claims and demands that may\n                  arise from your use or misuse of our services. We reserve the\n                  right to select our own legal counsel. Limitation on liability\n                  PollsApp is not liable for any damages that may occur to you\n                  as a result of your misuse of our website. PollsApp reserves\n                  the right to edit, modify, and change this Agreement any time.\n                  We shall let our users know of these changes through\n                  electronic mail. This Agreement is an understanding between\n                  PollsApp and the user, and this supersedes and replaces all\n                  prior agreements regarding the use of this website.`\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.onTermsDecline}>Decline</Button>\n                <Button onClick={this.onTermsAccept}>Accept</Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport default AuthDialog;\n","import AccountCircle from '@mui/icons-material/AccountCircle';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport MailIcon from '@mui/icons-material/Mail';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport HomeIcon from '@mui/icons-material/Home';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Button, Menu, MenuItem } from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Badge from '@mui/material/Badge';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport InputBase from '@mui/material/InputBase';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { alpha, styled } from '@mui/material/styles';\nimport PollIcon from '@mui/icons-material/Poll';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { withTheme } from '@mui/styles';\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext';\nimport AuthDialog, { DialogMode } from './AuthDialog';\n\nconst drawerWidth = 240;\n\nconst Main = styled('div', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\ninterface IAppBarWithSearchAndDrawerState {\n  anchorEl: null | HTMLElement;\n  mobileMoreAnchorEl: null | HTMLElement;\n  isDrawerOpen: boolean;\n  isAuthDialogOpen: boolean;\n  authDialog: DialogMode.SignIn | DialogMode.SignUp | null;\n}\n\nclass AppBarWithSearchAndDrawer extends React.Component<\n  any,\n  IAppBarWithSearchAndDrawerState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      mobileMoreAnchorEl: null,\n      isDrawerOpen: false,\n      isAuthDialogOpen: false,\n      authDialog: null,\n    };\n  }\n\n  static contextType = AuthContext;\n\n  handleDrawerOpen = () => {\n    this.setState({ isDrawerOpen: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ isDrawerOpen: false });\n  };\n\n  handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null, mobileMoreAnchorEl: null });\n  };\n\n  handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n  };\n\n  handleSignOut = () => {\n    this.handleMenuClose();\n    this.context.signout();\n  };\n\n  handleSignIn = () => {\n    this.handleMenuClose();\n    this.setState({ authDialog: DialogMode.SignIn });\n    // this.context.signin('User');\n  };\n\n  handleSignUp = () => {\n    this.handleMenuClose();\n    this.setState({ authDialog: DialogMode.SignUp });\n    // this.context.signin('User');\n  };\n\n  handleAuthDialogClose = () => {\n    this.setState({ authDialog: null });\n  };\n\n  render() {\n    const isMenuOpen = Boolean(this.state.anchorEl);\n    const isMobileMenuOpen = Boolean(this.state.mobileMoreAnchorEl);\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n      <Menu\n        anchorEl={this.state.anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose} key=\"profile\">\n          Profile\n        </MenuItem>\n        <MenuItem onClick={this.handleMenuClose} key=\"myAccount\">\n          My account\n        </MenuItem>\n        <MenuItem onClick={this.handleSignOut} key=\"signOut\">\n          Sign out\n        </MenuItem>\n      </Menu>\n    );\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={this.state.mobileMoreAnchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        {this.context.user && [\n          <MenuItem key=\"mails\">\n            <IconButton\n              size=\"large\"\n              aria-label=\"show 4 new mails\"\n              color=\"inherit\"\n            >\n              <Badge badgeContent={4} color=\"error\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <p>Messages</p>\n          </MenuItem>,\n          <MenuItem key=\"notifications\">\n            <IconButton\n              size=\"large\"\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n            >\n              <Badge badgeContent={17} color=\"error\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <p>Notifications</p>\n          </MenuItem>,\n          <MenuItem onClick={this.handleProfileMenuOpen} key=\"profile\">\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"primary-search-account-menu\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <p>Profile</p>\n          </MenuItem>,\n        ]}\n        {!this.context.user && [\n          <MenuItem\n            key=\"signIn\"\n            onClick={() => {\n              this.handleSignIn();\n            }}\n          >\n            Sign In\n          </MenuItem>,\n          <MenuItem\n            key=\"signUp\"\n            onClick={() => {\n              this.handleSignUp();\n            }}\n          >\n            Sign Up\n          </MenuItem>,\n        ]}\n      </Menu>\n    );\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n        }}\n      >\n        <CssBaseline />\n        <AppBar position=\"fixed\" open={this.state.isDrawerOpen}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              edge=\"start\"\n              sx={{\n                mr: 2,\n                ...(this.state.isDrawerOpen && {\n                  display: 'none',\n                }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{\n                display: {\n                  xs: 'none',\n                  sm: 'block',\n                },\n              }}\n            >\n              PollsApp\n            </Typography>\n            <Search>\n              <SearchIconWrapper>\n                <SearchIcon />\n              </SearchIconWrapper>\n              <StyledInputBase\n                placeholder=\"Search…\"\n                inputProps={{\n                  'aria-label': 'search',\n                }}\n              />\n            </Search>\n            <Box\n              sx={{\n                flexGrow: 1,\n              }}\n            />\n            <Box\n              sx={{\n                display: {\n                  xs: 'none',\n                  md: 'flex',\n                },\n              }}\n            >\n              {this.context.user ? (\n                <>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"show 4 new mails\"\n                    color=\"inherit\"\n                  >\n                    <Badge badgeContent={4} color=\"error\">\n                      <MailIcon />\n                    </Badge>\n                  </IconButton>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                  >\n                    <Badge badgeContent={17} color=\"error\">\n                      <NotificationsIcon />\n                    </Badge>\n                  </IconButton>\n                  <IconButton\n                    size=\"large\"\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleProfileMenuOpen}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle />\n                  </IconButton>\n                </>\n              ) : (\n                <>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={() => {\n                      this.handleSignUp();\n                    }}\n                  >\n                    <Typography\n                      variant=\"h6\"\n                      noWrap\n                      component=\"div\"\n                      sx={{\n                        display: {\n                          xs: 'none',\n                          sm: 'block',\n                        },\n                      }}\n                    >\n                      Sign Up\n                    </Typography>\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={() => {\n                      this.handleSignIn();\n                    }}\n                  >\n                    <Typography\n                      variant=\"h6\"\n                      noWrap\n                      component=\"div\"\n                      sx={{\n                        display: {\n                          xs: 'none',\n                          sm: 'block',\n                        },\n                      }}\n                    >\n                      Sign In\n                    </Typography>\n                  </Button>\n                </>\n              )}\n            </Box>\n            <Box\n              sx={{\n                display: {\n                  xs: 'flex',\n                  md: 'none',\n                },\n              }}\n            >\n              <IconButton\n                size=\"large\"\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n          {renderMobileMenu}\n          {renderMenu}\n        </AppBar>\n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n              width: drawerWidth,\n              boxSizing: 'border-box',\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={this.state.isDrawerOpen}\n        >\n          <DrawerHeader>\n            <IconButton onClick={this.handleDrawerClose}>\n              {this.props.theme && this.props.theme.direction === 'ltr' ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            <Link\n              to={'/'}\n              style={{\n                textDecoration: 'none',\n              }}\n            >\n              <ListItem button key={'home'}>\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Home'} />\n              </ListItem>\n            </Link>\n            <Link\n              to={'/polls'}\n              style={{\n                textDecoration: 'none',\n              }}\n            >\n              <ListItem button key={'polls'}>\n                <ListItemIcon>\n                  <PollIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Polls'} />\n              </ListItem>\n            </Link>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <Main open={this.state.isDrawerOpen}>\n          <DrawerHeader />\n          {this.state.authDialog !== null && (\n            <AuthDialog\n              mode={this.state.authDialog}\n              onClose={this.handleAuthDialogClose}\n            />\n          )}\n        </Main>\n      </Box>\n    );\n  }\n}\n\nexport default withTheme(AppBarWithSearchAndDrawer);\n","import { Home } from '@mui/icons-material';\nimport { Paper, Typography } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass PageNotFound extends React.Component {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Paper\n        sx={{\n          backgroundColor: (t) => t.palette.background.default,\n          margin: 0,\n          height: `calc(100vh - 64px)`,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: `100%`,\n          }}\n        >\n          <Typography variant=\"h4\">404</Typography>\n          <Typography variant=\"subtitle1\">\n            <span>Page Not Found</span>\n          </Typography>\n          <Link to=\"/\">\n            <Home />\n          </Link>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import {\n  Breadcrumbs,\n  Button,\n  FormControl,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\n\nclass NewPoll extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { options: ['', ''], name: '' };\n  }\n\n  addOption = () => {\n    const options = this.state.options;\n    options.push('');\n    this.setState(options);\n  };\n\n  create = async () => {\n    const headers: HeadersInit = {\n      'Content-Type': 'application/json',\n    };\n    const user = localStorage.getItem('user');\n    if (user) {\n      const token = JSON.parse(user).access_token;\n      headers.Authorization = `Bearer ${token}`;\n    }\n\n    const response = await fetch('http://localhost:3000/api/polls', {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        name: this.state.name,\n        options: this.state.options,\n      }),\n    });\n    if (response.ok) {\n      const json = await response.json();\n      console.log('polls');\n      console.log(json);\n    } else {\n      alert('poll create error: ' + response.status);\n    }\n  };\n\n  removeOption = () => {\n    const options = this.state.options;\n    if (options.length <= 2) {\n      return;\n    }\n    options.splice(-1);\n    this.setState(options);\n  };\n\n  render() {\n    const options = this.state.options.map((option: string, index: number) => (\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id={`option-${index}`}\n        label={`Option ${index}`}\n        onChange={(event) => {\n          const options = this.state.options;\n          options[index] = event.target.value;\n          this.setState(options);\n        }}\n        value={option}\n        type=\"text\"\n        variant=\"outlined\"\n      />\n    ));\n    return (\n      <main>\n        <div className=\"NewPoll\">\n          <h1>Create new poll.</h1>\n          <Breadcrumbs aria-label=\"breadcrumb\">\n            <Link color=\"inherit\" to=\"/polls\">\n              Polls\n            </Link>\n            <Typography color=\"text.primary\">Create new poll</Typography>\n          </Breadcrumbs>\n          <Paper elevation={3}>\n            <FormControl>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"poll-name\"\n                label=\"Poll name\"\n                type=\"text\"\n                onChange={(event) => {\n                  this.setState({ name: event.target.value });\n                }}\n                variant=\"outlined\"\n              />\n              {options}\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.addOption}\n              >\n                Add option\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.removeOption}\n              >\n                Remove option\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={this.create}>\n                Create\n              </Button>\n            </FormControl>\n          </Paper>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default NewPoll;\n","import React from 'react';\nimport Poll from './Polls/Poll';\nimport Polls from './Polls/Polls';\nimport AppBarWithSearchAndDrawer from './common/components/AppBarWithSearchAndDrawer';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport { Box, Container, Typography } from '@mui/material';\nimport PageNotFound from './PageNotFound/PageNotFound';\nimport NewPoll from './Polls/NewPoll';\nimport IUser from './common/interfaces/IUser';\nimport { AuthContext } from './common/AuthContext';\n\n// interface IProps {}\n\nfunction Home() {\n  return (\n    <>\n      <main>\n        <h2>Welcome to the homepage!</h2>\n        <p>You can do this, I believe in you.</p>\n      </main>\n      <nav>\n        <Link to=\"/about\">About</Link>\n      </nav>\n    </>\n  );\n}\n\nfunction About() {\n  return (\n    <>\n      <main>\n        <h2>Who are we?</h2>\n        <p>That feels like an existential question, don't you think?</p>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n  );\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"/\">\n        PollsApp\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\ninterface IAppState {\n  user: null | IUser;\n}\n\nclass App extends React.Component<any, IAppState> {\n  constructor(props: any) {\n    super(props);\n    const userCredentials = localStorage.getItem('user');\n    const username = localStorage.getItem('username');\n    this.state = {\n      user: username && userCredentials ? { login: username } : null,\n    };\n  }\n  signin = (login: string) => {\n    this.setState({ user: { login } });\n  };\n\n  signout = () => {\n    this.setState({ user: null });\n    localStorage.clear();\n  };\n\n  componentDidMount() {\n    const user = localStorage.getItem('user');\n    const username = localStorage.getItem('username');\n    if (user && username) {\n      this.signin(username);\n    }\n  }\n\n  render() {\n    return (\n      <AuthContext.Provider\n        value={{\n          user: this.state.user,\n          signin: this.signin,\n          signout: this.signout,\n        }}\n      >\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/* <PrimarySearchAppBar /> */}\n            <AppBarWithSearchAndDrawer />\n          </header>\n          <Container maxWidth=\"md\">\n            <Box sx={{ minHeight: 500 }}>\n              <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"about\" element={<About />} />\n                <Route path=\"/polls\" element={<Polls />} />\n                <Route path=\"/polls/new\" element={<NewPoll />} />\n                <Route path=\"/polls/:id\" element={<Poll />} />\n                <Route path=\"/404\" element={<PageNotFound />} />\n              </Routes>\n            </Box>\n          </Container>\n          <footer>\n            <Copyright />\n          </footer>\n        </div>\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles' {\n  interface Theme {\n    status: {\n      danger: string;\n    };\n  }\n  // allow configuration using `createTheme`\n  interface ThemeOptions {\n    status?: {\n      danger?: string;\n    };\n  }\n}\n\nexport const theme = createTheme({\n  status: {\n    // danger: orange[500],\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider>\n          <App />\n        </SnackbarProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}